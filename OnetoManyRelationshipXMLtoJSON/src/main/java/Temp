package com.example.OnetoManyRelationshipXMLtoJSON.controller;

import com.example.OnetoManyRelationshipXMLtoJSON.entity.StudentEntity;
import com.example.OnetoManyRelationshipXMLtoJSON.repository.StudentRepository;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.*;
import java.util.ArrayList;
import java.util.List;

@RestController
@RequestMapping("/students")
public class StudentController {
    private final StudentRepository studentRepository;

    @Autowired
    public StudentController(StudentRepository studentRepository) {
        this.studentRepository = studentRepository;
    }

    @PostMapping("/import")
    public void importStudents(MultipartFile file) throws ParserConfigurationException, IOException {
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        InputStream inputStream = file.getInputStream();
        org.w3c.dom.Document document = null;
        try {
            document = dBuilder.parse(inputStream);
        } catch (SAXException e) {
            throw new RuntimeException(e);
        }
        document.getDocumentElement().normalize();
        org.w3c.dom.NodeList nodeList = document.getElementsByTagName("Student");
        List<StudentEntity> students = new ArrayList<>();

        for (int i = 0; i < nodeList.getLength(); i++) {
            org.w3c.dom.Node node = nodeList.item(i);
            if (node.getNodeType() == org.w3c.dom.Node.ELEMENT_NODE) {
                org.w3c.dom.Element element = (org.w3c.dom.Element) node;
                StudentEntity student = new StudentEntity();
                student.setFirstName(element.getElementsByTagName("firstName").item(0).getTextContent());
                student.setLastName(element.getElementsByTagName("lastName").item(0).getTextContent());
                student.setEmail(element.getElementsByTagName("email").item(0).getTextContent());
                students.add(student);
            }
        }

        String json = convertToJson(students);
        saveJsonToFile(json);
        System.out.println("Data Converted to JSON and Stored Successfully!");
    }

    private String convertToJson(List<StudentEntity> students) throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.enable(SerializationFeature.INDENT_OUTPUT);
        return objectMapper.writeValueAsString(students);
    }

    private void saveJsonToFile(String json) throws IOException {
        File outputFile = new File("output.json");
        try (OutputStream outputStream = new FileOutputStream(outputFile)) {
            outputStream.write(json.getBytes());
        }
    }
}













--------------------------------------



package com.example.OnetoManyRelationshipXMLtoJSON.entity;


import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class StudentEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String firstName;
    private String lastName;
    private String email;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public StudentEntity(){
    }

    public StudentEntity(Long id, String firstName, String lastName, String email) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
    }
}














---------------------



